pqy@sda1:~/.../BankerAlgorithm$ gcc banker.c 
pqy@sda1:~/.../BankerAlgorithm$ ./a.out 
Please input the number of kind of source: 3
Please input the number of source for each kind when system power on
parting by enter or space, from kind 1 to last kind:
10 5 7
Please input the number of processes: 5
Please input the maximum sources requested for each process each source, one row
one process, and from left to right is kind 1 source, 2 source, 3 source...
7 5 3
3 2 2
9 0 2
2 2 2
4 3 3
Do you need to initialize sources allocation(y/n)? n
After initialized of allocation:
For each process how many source it need for each kind:
Kind:            1 2 3 
Process 1:       7 5 3 
Process 2:       3 2 2 
Process 3:       9 0 2 
Process 4:       2 2 2 
Process 5:       4 3 3 
All available sources: 
Kind     Available Number
1        10
2        5
3        7
The sources allocated:
Kind:            1 2 3 
Process 1:       0 0 0 
Process 2:       0 0 0 
Process 3:       0 0 0 
Process 4:       0 0 0 
Process 5:       0 0 0 
Please select which process you want to assign source(process counting from 1): 1
Please input the amount of source that you request for process 1
from left to right is kind 1 source, kind 2 source, kind 3 ...
0 0 0
The amount of source that you want to assign to process 1: 
Kind     Request Amount
1        0
2        0
3        0
After try assigned: 
All available sources: 
Kind     Available Number
1        10
2        5
3        7
The sources allocated:
Kind:            1 2 3 
Process 1:       0 0 0 
Process 2:       0 0 0 
Process 3:       0 0 0 
Process 4:       0 0 0 
Process 5:       0 0 0 
For each process how many source it need for each kind:
Kind:            1 2 3 
Process 1:       7 5 3 
Process 2:       3 2 2 
Process 3:       9 0 2 
Process 4:       2 2 2 
Process 5:       4 3 3 


---------------------------------------------
System status 0:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  7 5 3   0 0 0          0
Process 2:       3 2 2  3 2 2   0 0 0          0
Process 3:       9 0 2  9 0 2   0 0 0          0
Process 4:       2 2 2  2 2 2   0 0 0          0
Process 5:       4 3 3  4 3 3   0 0 0          0
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------

---------------------------------------------
System status 1, after finished process 1:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  0 0 0   0 0 0          1
Process 2:       3 2 2  3 2 2   0 0 0          0
Process 3:       9 0 2  9 0 2   0 0 0          0
Process 4:       2 2 2  2 2 2   0 0 0          0
Process 5:       4 3 3  4 3 3   0 0 0          0
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------


---------------------------------------------
System status 2, after finished process 2:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  0 0 0   0 0 0          1
Process 2:       3 2 2  0 0 0   0 0 0          1
Process 3:       9 0 2  9 0 2   0 0 0          0
Process 4:       2 2 2  2 2 2   0 0 0          0
Process 5:       4 3 3  4 3 3   0 0 0          0
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------


---------------------------------------------
System status 3, after finished process 3:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  0 0 0   0 0 0          1
Process 2:       3 2 2  0 0 0   0 0 0          1
Process 3:       9 0 2  0 0 0   0 0 0          1
Process 4:       2 2 2  2 2 2   0 0 0          0
Process 5:       4 3 3  4 3 3   0 0 0          0
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------


---------------------------------------------
System status 4, after finished process 4:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  0 0 0   0 0 0          1
Process 2:       3 2 2  0 0 0   0 0 0          1
Process 3:       9 0 2  0 0 0   0 0 0          1
Process 4:       2 2 2  0 0 0   0 0 0          1
Process 5:       4 3 3  4 3 3   0 0 0          0
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------


---------------------------------------------
System status 5, after finished process 5:
                  Max    Need  Allocation   Finished
Kind:            1 2 3  1 2 3   1 2 3  
Process 1:       7 5 3  0 0 0   0 0 0          1
Process 2:       3 2 2  0 0 0   0 0 0          1
Process 3:       9 0 2  0 0 0   0 0 0          1
Process 4:       2 2 2  0 0 0   0 0 0          1
Process 5:       4 3 3  0 0 0   0 0 0          1
Kind     Available Number
1        10
2        5
3        7
---------------------------------------------
The requested for sources of 1 process is valid.
There is a sequence that used by the system can finish all process:
p1, p2, p3, p4, p5, 
pqy@sda1:~/.../BankerAlgorithm$ 
[pqy@sda1:0]  0:ss-local 1:example_data 2:banker.c 3:nano                  1.01 51% Fri 2017-05-26 00:50
